name: Test static binaries

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'The release tag you want to download and test'
        default: ''
        required: true
        type: string
      
jobs:
  install:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        clang-version: [ 7, 8, 9, 10, 11, 12, 12.0.1, 13, 14, 15, 16, 17, 18 ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        include:
          - os: ubuntu-latest
            bin_pattern: linux-amd64
            checksum_pattern: linux-amd64
          - os: macos-latest
            bin_pattern: macosx-amd64
            checksum_pattern: macosx-amd64
          - os: windows-latest
            bin_pattern: windows-amd64.exe
            checksum_pattern: windows-amd64
      fail-fast: false
    env:
      GH_TOKEN: ${{ secrets.TOKEN }}
      bin_suffix: '${{ matrix.clang-version }}_${{ matrix.bin_pattern }}'
      checksum_suffix: '${{ matrix.clang-version }}_${{ matrix.checksum_pattern }}.sha512sum'
    steps:
      - uses: actions/checkout@v4
      - name: Download and check clang versions
        shell: bash
        run: |
          gh release download ${{ inputs.tag }} --pattern 'clang-format-${{ env.bin_suffix }}'
          gh release download ${{ inputs.tag }} --pattern 'clang-format-${{ env.checksum_suffix }}'
          echo "== Output clang-format checksum"
          cat clang-format-${{ env.checksum_suffix }}
          chmod +x clang-format-${{ env.bin_suffix }}
          echo "== Output clang-format version"
          ./clang-format-${{ env.bin_suffix }} --version

          gh release download ${{ inputs.tag }} --pattern 'clang-tidy-${{ env.bin_suffix }}'
          gh release download ${{ inputs.tag }} --pattern 'clang-tidy-${{ env.checksum_suffix }}'
          echo "== Output clang-tidy checksum"
          cat clang-tidy-${{ env.checksum_suffix }}
          chmod +x clang-tidy-${{ env.bin_suffix }}
          echo "== Output clang-tidy version"
          ./clang-tidy-${{ env.bin_suffix }} --version

          gh release download ${{ inputs.tag }} --pattern 'clang-query-${{ env.bin_suffix }}'
          gh release download ${{ inputs.tag }} --pattern 'clang-query-${{ env.checksum_suffix }}'
          echo "== Output clang-query checksum"
          cat clang-query-${{ env.checksum_suffix }}
          chmod +x clang-query-${{ env.bin_suffix }}
          echo "== Output clang-query version"
          ./clang-query-${{ env.bin_suffix }} --version
          
          gh release download ${{ inputs.tag }} --pattern 'clang-apply-replacements-${{ env.bin_suffix }}'
          gh release download ${{ inputs.tag }} --pattern 'clang-apply-replacements-${{ env.checksum_suffix }}'
          echo "== Output clang-apply-replacements checksum"
          cat clang-apply-replacements-${{ env.checksum_suffix }}
          chmod +x clang-apply-replacements-${{ env.bin_suffix }}
          echo "== Output clang-apply-replacements version"
          ./clang-apply-replacements-${{ env.bin_suffix }} --version
